@model HomeModel
@{
    ViewData["Title"] = "Editar Usuario";
    Layout = "_LayoutDeslogado";
}

@if (TempData["MensagemErro"] != null)
{
    <div class="alert alert-danger">@TempData["MensagemErro"]</div>
}

@if (TempData["MensagemSucesso"] != null)
{
    <div class="alert alert-success">@TempData["MensagemSucesso"]</div>
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

<style>
    body {
        display: flex;
        flex-direction: column;
        min-height: 100vh;
    }

    .main-content {
        flex: 1;
        display: flex;
        flex-direction: column;
        overflow: hidden;
    }

    .form-scroll-container {
        flex: 1;
        overflow-y: auto;
        padding: 1rem 0;
    }

    .form-card {
        max-width: 600px;
        margin: 0 auto;
        border: 2px solid #ccc;
        border-radius: 10px;
        box-shadow: 0 0.25rem 0.5rem rgba(0,0,0,0.1);
    }

    .form-body {
        padding: 1.5rem;
        max-height: calc(100vh - 200px);
        overflow-y: auto;
    }

    .form-title {
        font-family: Courier, monospace;
        font-size: clamp(1.5rem, 5vw, 2rem);
        margin-bottom: 1.5rem;
        text-align: center;
        color: #37c3b4;
    }

    .form-label, .form-control {
        font-family: 'Courier New', Courier, monospace;
    }

    .form-control {
        border-radius: 10px;
        margin-bottom: 0.75rem;
    }
</style>

<div class="main-content">
    <div class="form-scroll-container">
        <div class="form-card">
            <form id="cadastroForm" asp-controller="MeuPerfil" asp-action="Editar" method="post" enctype="multipart/form-data">
                <div class="form-body">

                    <h1 class="form-title">Editar Usuário</h1>

                    @Html.HiddenFor(m => m.Id)
                    @Html.HiddenFor(m => m.Usuario.Id)
                    @Html.HiddenFor(m => m.Usuario.DataCadastro)
                    @Html.HiddenFor(m => m.Usuario.DataAtualização)
                    @Html.HiddenFor(m => m.Usuario.Foto)
                    @Html.HiddenFor(m => m.Usuario.Senha)
                    @Html.HiddenFor(m => m.Usuario.Perfil)

                    <div class="mb-3">
                        <label class="form-label">Foto do Time</label>
                        <input type="file" asp-for="Usuario.FotoArquivo" class="form-control" accept="image/*" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Nome</label>
                        @Html.TextBoxFor(m => m.Usuario.Name, new { @class = "form-control", placeholder = "Nome do usuário" })
                        <span class="text-danger">@Html.ValidationMessageFor(x => x.Usuario.Name)</span>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">E-mail</label>
                        @Html.TextBoxFor(m => m.Usuario.Email, new { @class = "form-control", placeholder = "Email" })
                        <span class="text-danger">@Html.ValidationMessageFor(x => x.Usuario.Email)</span>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Usuário</label>
                        @Html.TextBoxFor(m => m.Usuario.Login, new { @class = "form-control", placeholder = "Login" })
                        <span class="text-danger">@Html.ValidationMessageFor(x => x.Usuario.Login)</span>
                    </div>

                    <!-- Possui Quadra? -->
                    <div class="mb-2">
                        <div class="d-flex justify-content-between align-items-center">
                            <label class="form-label mb-0" for="quadraSwitch">Possui Quadra?</label>
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" id="quadraSwitch" data-bs-toggle="collapse" data-bs-target="#quadraFields" aria-checked="false" @(Model.Quadra?.DS_Endereco != null ? "checked" : "")>
                            </div>
                        </div>
                    </div>

                    <div class="collapse mb-2 @(Model.Quadra?.DS_Endereco != null ? "show" : "")" id="quadraFields">
                        <div class="mb-2">
                            <label class="form-label">CEP</label>
                            <div class="input-group">
                                <input type="text" id="cep" class="form-control" placeholder="Digite o CEP" maxlength="9" onkeyup="formatarCEP(this)" />
                            </div>
                            <small class="text-muted">Digite o CEP para autopreencher o endereço</small>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Endereço da Quadra</label>
                            @Html.TextBoxFor(m => m.Quadra.DS_Endereco, new { @class = "form-control", placeholder = "Endereço", id = "Quadra_DS_Endereco" })
                            @Html.ValidationMessageFor(x => x.Quadra.DS_Endereco)

                        </div>

                        <div class="mb-3">
                            <label class="form-label">Nome da Quadra</label>
                            @Html.TextBoxFor(m => m.Quadra.NM_Quadra, new { @class = "form-control", placeholder = "Nome da Quadra", id = "Quadra_NM_Quadra" })
                            @Html.ValidationMessageFor(x => x.Quadra.NM_Quadra)
                            @Html.HiddenFor(m => m.Quadra.id_Time)
                            @Html.HiddenFor(m => m.Quadra.Id)
                        </div>
                    </div>

                    <div class="d-flex justify-content-end mt-4" style="gap: 1rem;">
                        <a class="btn btn-sm rounded-pill px-4"
                           asp-action="Index"
                           asp-controller="MeuPerfil"
                           style="color: #37c3b4; border-color: #37c3b4; background-color: transparent;">
                            Voltar
                        </a>

                        <button type="submit"
                                class="btn btn-sm rounded-pill px-4"
                                style="background-color: #37c3b4; color: white; border: none;">
                            Editar
                        </button>
                    </div>

                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const quadraSwitch = document.getElementById('quadraSwitch');
        const quadraFields = document.getElementById('quadraFields');
        const quadraInputs = quadraFields.querySelectorAll('input[type="text"]');

        function atualizarObrigatoriedade() {
            quadraInputs.forEach(input => {
                if (quadraSwitch.checked) {
                    input.setAttribute('required', 'required');
                } else {
                    input.removeAttribute('required');
                }
            });
        }

        quadraSwitch.addEventListener('change', atualizarObrigatoriedade);

        quadraFields.addEventListener('show.bs.collapse', () => {
            quadraSwitch.checked = true;
            atualizarObrigatoriedade();
        });

        quadraFields.addEventListener('hide.bs.collapse', () => {
            quadraSwitch.checked = false;
            atualizarObrigatoriedade();
        });

        const form = document.getElementById('cadastroForm');
        if (form) {
            form.addEventListener('submit', function (event) {
                atualizarObrigatoriedade();

                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }

                form.classList.add('was-validated');
            }, false);
        }

        const cepInput = document.getElementById('cep');
        if (cepInput) {
            cepInput.addEventListener('input', function () {
                const cep = this.value.replace("-", "");
                if (cep.length === 8) {
                    buscarCEPAutomatico(this);
                }
            });
        }
    });

    function buscarCEPAutomatico(cepInput) {
        const cep = cepInput.value.replace("-", "");
        if (cep.length !== 8) return;

        const enderecoInput = document.getElementById('Quadra_DS_Endereco');
        enderecoInput.value = "Buscando...";

        fetch(`https://viacep.com.br/ws/${cep}/json/`)
            .then(response => response.json())
            .then(data => {
                if (data.erro) throw new Error("CEP não encontrado");
                enderecoInput.value = data.logradouro || "";
                document.getElementById('Quadra_NM_Quadra').focus();
            })
            .catch(() => {
                enderecoInput.value = "";
                cepInput.focus();
                alert("Erro ao buscar o CEP. Verifique se está correto.");
            });
    }

    function formatarCEP(input) {
        let value = input.value.replace(/\D/g, '');
        if (value.length > 5) {
            input.value = value.slice(0, 5) + '-' + value.slice(5, 8);
        } else {
            input.value = value;
        }
    }
</script>
